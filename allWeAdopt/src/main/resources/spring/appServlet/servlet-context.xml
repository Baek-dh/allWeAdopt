<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
		
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- @RequestMapping, @GetMapping, @PostMapping, @ExceptionErrorHandler 인식 -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- ViewResolver-->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 지정된 패키지 이하에 존재하는 @Component, @Controller, @Service, @Repository를 찾아 bean으로 생성 -->
	<context:component-scan base-package="edu.kh.allWeAdopt" />
	
	<!-- interceptors 추가  -->
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- 트랜잭션 처리시 @transactional 어노테이션 사용예정
		 @transactional : 클래스 또는 메서드 수행 후 트랜잭션 처리를 하라고 알려주는 어노테이션
		 -> 해당 어노테이션을 인식하라는 설정이 필요함
		 -> annotation-driven 
	-->
	 
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- aop autoproxy -->
	<aop:aspectj-autoproxy/>
	
</beans:beans>