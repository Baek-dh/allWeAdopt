SELECT MEMBER_NO, MEMBER_EMAIL, MEMBER_NM ,MEMBER_TEL,
       		MEMBER_ADDR, PROFILE_IMG, 
    		TO_CHAR( ENROLL_DT, 'YYYY-MM-DD HH24:MI:SS') AS ENROLL_DT, MEMBER_PW, MEMBER_TYPE
FROM MEMBER
WHERE MEMBER_EMAIL = 'user01@kh.or.kr'
AND SECESSION_FL = 'N' ;



-- 카카오 로그인 회원 정보 조회
SELECT * FROM MEMBER
WHERE MEMBER_EMAIL = 'kjy_1615@naver.com'
AND SECESSION_FL = 'N';

-- 회원 데이터 삭제
DELETE FROM MEMBER
WHERE MEMBER_EMAIL = 'kjy_1615@naver.com';



-- 카카오 로그인 시 비밀번호가 null 인가 조회 ANIMAL_DETAIL
SELECT * FROM MEMBER
WHERE MEMBER_EMAIL = 'kakao@user.com';


-- 카카오 로그인 시 처음 로그인한 회원의 정보 삽입TEST
INSERT INTO MEMBER 
VALUES(SEQ_MEMBER_NO.NEXTVAL,'kakao3@user.com',NULL,'kakaoname',null,
		DEFAULT,DEFAULT,DEFAULT,'K',DEFAULT,DEFAULT);

INSERT INTO MEMBER 
VALUES(#{memberNo}, #{memberEmail}, NULL, #{memberName}, NULL,
            DEFAULT,이미지,DEFAULT,'K',DEFAULT)

-- 멤버 타입 변경 
UPDATE MEMBER SET
MEMBER_TYPE = 'K'
WHERE MEMBER_NO ='46';


-- MEMBER_TEL - NOT NULL 제약조건 빼기
ALTER TABLE "MEMBER"
MODIFY "MEMBER_TEL" NULL;

-- MEMBER_PW - NOT NULL 제약조건 빼기
ALTER TABLE "MEMBER"
MODIFY "MEMBER_PW" NULL;

-- 카카오 로그인 멤버 타입 - 플래그 K 넣기
-- 제약조건 조회
SELECT * FROM ALL_CONSTRAINTS WHERE TABLE_NAME = 'MEMBER';

-- memberType 체크 제약조건 (SYS_C0021379) 삭제 후 재생성
ALTER TABLE "MEMBER" DROP CONSTRAINT SYS_C0021379; 

ALTER TABLE "MEMBER" ADD CHECK("MEMBER_TYPE" IN ('M','A','K'));


-- 비밀번호 조회
SELECT MEMBER_PW FROM MEMBER
WHERE MEMBER_NO = 7;

-- 회원탈퇴
UPDATE MEMBER SET
SECESSION_FL = 'Y'
WHERE MEMBER_NO = 7;

UPDATE MEMBER SET
SECESSION_FL = 'N'
WHERE MEMBER_NO = 10; 


-- 인증 테이블 생성
CREATE TABLE CERTIFICATION(
	EMAIL VARCHAR2(100) PRIMARY KEY, --한 이메일로 발급 받은 인증번호가 계속 업데이트
	C_NUMBER CHAR(6) NOT NULL,
	ISSUE_DT DATE DEFAULT SYSDATE

);

-- rlawndp@hamail.net 123456
-- rlawndp@hamail.net 234567 -> UPDATE

-- 인증번호 수정
UPDATE CERTIFICATION SET
C_NUMBER = ?,
ISSUE_DT = SYSDATE
WHERE EMAIL = ?;

-- 인증번호 생성
INSERT INTO CERTIFICATION VALUE(이메일,인증번호,SYSDATE);

-- 인증번호 조회
SELECT * FROM CERTIFICATION;


SELECT count(EMAIL) FROM CERTIFICATION
WHERE EMAIL = 'rlawndp@hanmail.net';


-- 일정시간 지난 후 조회
--> 인증번호 발급시간 + 5분 == 발급받은지 5분이 지남 == 인증번호 만료
--> (INTERVAL '숫자' HOUR|MINUTE|SECOND)
SELECT TO_CHAR(SYSDATE+(INTERVAL '5' MINUTE), 'YYYY-MM-DD HH24:MI:SS')
FROM DUAL;

-- 발급시간 + 5분 < 현재시간 == 만료 
--  ex) 17:03 + 5분 == 17:08 < 17:11
-- 발급시간 + 5분 > 현재시간 == 인증가능시간
--  ex) 17:03 + 5분 == 17:08 > 17:06

-- NVL(A,B) : A가 NULL이면 B를 반환

ELECT 
   -- 이메일, 인증번호가 일치하는 행이 있는지를 찾음 -> 있으면 1, 없으면 NULL
   --> 1이면 THEN 구문 수행  , NULL이면 ELSE 수행
   CASE WHEN (SELECT '1' FROM CERTIFICATION
               WHERE EMAIL = 'rlawndp@hanmail.net'
               AND C_NUMBER = 'IH35VX')  = 1
   
      THEN NVL( (SELECT '1' FROM CERTIFICATION
                  WHERE EMAIL = 'rlawndp@hanmail.net'
                  AND ISSUE_DT + (INTERVAL '5' MINUTE) >= SYSDATE) , '2') 

      ELSE '3'	
   END			
FROM DUAL;


SELECT 
   CASE WHEN (SELECT '1' FROM CERTIFICATION
            WHERE EMAIL = ?
            AND C_NUMBER = ?)  = 1
   
      THEN NVL( (SELECT '1' FROM CERTIFICATION
            WHERE EMAIL = ?
            AND ISSUE_DT + (INTERVAL '5' MINUTE) >= SYSDATE) , '2') 

      ELSE '3'	
   END			
FROM DUAL;

-- 게스글 수 조회 
SELECT * 
FROM BOARD
JOIN MEMBER USING (MEMBER_NO)
WHERE BOARD_CD = 5
AND BOARD_ST = 'N'
AND MEMBER_NO = 239;

-- 문의 게시글 데이터 클린
DELETE FROM BOARD WHERE BOARD_CD = 5 AND CATEGORY = 0;


-- 게시글 목록 조회
SELECT BOARD_NO,CATEGORY, BOARD_TITLE,
      CASE WHEN SYSDATE - CREATE_DT &lt; 1
            THEN TO_CHAR(CREATE_DT, 'HH24:MI')
            ELSE TO_CHAR(CREATE_DT, 'YYYY-MM-DD')
      END CREATE_DT,
      TO_CHAR(CREATE_DT, 'YYYY-MM-DD') CATEGORY,
      BOARD_ST          
FROM BOARD
WHERE BOARD_CD = 5
AND BOARD_ST = 'N'
ORDER BY BOARD_NO DESC;

-- 게시글 목록 조회
SELECT BOARD_NO,CATEGORY, BOARD_TITLE, MEMBER_NO,
      CASE WHEN SYSDATE - CREATE_DT < 1
            THEN TO_CHAR(CREATE_DT, 'HH24:MI')
            ELSE TO_CHAR(CREATE_DT, 'YYYY-MM-DD')
      END CREATE_DT,
      TO_CHAR(CREATE_DT, 'YYYY-MM-DD') BOARD_PERIOD,
      BOARD_ST          
FROM BOARD
WHERE BOARD_CD = 5
AND BOARD_ST = 'N'
AND MEMBER_NO = 22

ORDER BY BOARD_NO DESC;

-- 게시글 목록조회2
SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT, MEMBER_NO, 
      CASE WHEN SYSDATE - CREATE_DT < 1
         THEN TO_CHAR(CREATE_DT, 'HH24:MI')
         ELSE TO_CHAR(CREATE_DT, 'YYYY-MM-DD')
      END CREATE_DT,
      TO_CHAR(CREATE_DT, 'YYYY-MM-DD') BOARD_PERIOD,
      BOARD_ST,
      BOARD_NAME AS CATEGORY
FROM BOARD B
JOIN BOARD_TYPE T ON(CATEGORY= T.BOARD_CD)
WHERE B.BOARD_CD =5
AND BOARD_ST = 'N'
-- AND MEMBER_NO = 22
-- AND BOARD_NO= 122
ORDER BY BOARD_NO DESC;



-- 게시글 목록조회3
SELECT B.BOARD_NO, B.BOARD_TITLE, B.BOARD_CONTENT, B.MEMBER_NO, 
      CASE WHEN SYSDATE - B.CREATE_DT < 1
         THEN TO_CHAR(B.CREATE_DT, 'HH24:MI')
         ELSE TO_CHAR(B.CREATE_DT, 'YYYY-MM-DD')
      END CREATE_DT,
      TO_CHAR(B.CREATE_DT, 'YYYY-MM-DD') BOARD_PERIOD,
      BOARD_ST,
      BOARD_NAME AS CATEGORY,
      COUNT(R.REPLY_CONTENT)
FROM BOARD B
JOIN BOARD_TYPE T ON(CATEGORY= T.BOARD_CD)
JOIN REPLY R ON(B.BOARD_NO = R.BOARD_NO)
WHERE B.BOARD_CD =5
AND BOARD_ST = 'N'
-- AND REPLY_ST = 'N'
AND B.MEMBER_NO = 22
-- AND B.BOARD_NO= 122
GROUP BY B.BOARD_NO
ORDER BY BOARD_NO DESC;

-- 게시글 목록조회 4
SELECT B.BOARD_NO, B.BOARD_TITLE, B.BOARD_CONTENT, B.MEMBER_NO, 
       CASE WHEN SYSDATE - B.CREATE_DT < 1
          THEN TO_CHAR(B.CREATE_DT, 'HH24:MI')
          ELSE TO_CHAR(B.CREATE_DT, 'YYYY-MM-DD')
       END CREATE_DT,
      TO_CHAR(B.CREATE_DT, 'YYYY-MM-DD') BOARD_PERIOD,
      BOARD_ST,
      BOARD_NAME AS CATEGORY,
     (SELECT COUNT(*)
     FROM REPLY R
     WHERE B.BOARD_NO = R.BOARD_NO
     AND R.REPLY_ST = 'N') AS COUNT
FROM BOARD B
JOIN BOARD_TYPE T ON(CATEGORY= T.BOARD_CD)
WHERE B.BOARD_CD =5
AND BOARD_ST = 'N'
ORDER BY BOARD_NO DESC;


-- 샘플 데이터 삽입..
INSERT INTO BOARD 
VALUES(SEQ_BOARD_NO.NEXTVAL,'펀딩환불 관련 문의입니다.','펀딩 결제환불 가능한가요?', SYSDATE, SYSDATE, '펀딩/환불','N',NULL
		,NULL, 5, 22, NULL, NULL);

-- 샘플 데이터 삽입..2!  == 문의글 조회
INSERT INTO BOARD VALUES(SEQ_BOARD_NO.NEXTVAL, '문의사항 제목20', '문의 내용', DEFAULT, NULL, 1, DEFAULT, NULL, 
NULL, 5, 22, NULL,NULL);


SELECT * FROM BOARD WHERE BOARD_CD = 5;


UPDATE BOARD SET
CATEGORY = 1
WHERE BOARD_NO= 122;


-- 게시글 상세조회
SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT, CATEGORY, MEMBER_NM,
      TO_CHAR(CREATE_DT, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') CREATE_DT,
      TO_CHAR(UPDATE_DT, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') UPDATE_DT,
      BOARD_ST
FROM BOARD
JOIN MEMBER USING (MEMBER_NO)
WHERE BOARD_NO = 122;



-- 댓글 목록 조회
SELECT REPLY_NO, REPLY_CONTENT,
      TO_CHAR(CREATE_DT, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') CREATE_DT,
      BOARD_NO, MEMBER_NO, MEMBER_NM, PROFILE_IMG, REPLY_ST
FROM REPLY
JOIN MEMBER USING(MEMBER_NO)
WHERE BOARD_NO = 122
AND REPLY_ST='N';

-- 문의사항의 게시판 별 댓글 조회
SELECT  BOARD_NO, REPLY_NO, REPLY_CONTENT
FROM REPLY
JOIN BOARD USING(BOARD_NO)
WHERE BOARD_CD = 5
AND REPLY_ST='N';

-- 댓글 등록
INSERT INTO REPLY VALUES(
      SEQ_REPLY_NO.NEXTVAL, '환불 안됩니다~', 1, 122, NULL, DEFAULT, 'N');

-- 댓글 조회
SELECT * FROM REPLY;   


------------------ 관리자 메인페이지 ----------------- 

-- 오늘날짜 '문의 글 수 조회'
SELECT COUNT(*)
FROM BOARD
WHERE BOARD_CD=5
AND TO_CHAR(CREATE_DT, 'YYYY-MM-DD') = TO_CHAR(SYSDATE,'YYYY-MM-DD');

-- 오늘날자 어답터 게시글 수 
SELECT COUNT(*)
FROM BOARD
WHERE BOARD_CD=2
AND TO_CHAR(CREATE_DT, 'YYYY-MM-DD') = TO_CHAR(SYSDATE,'YYYY-MM-DD');

-- 오늘날짜 펀딩 결제 건수
SELECT COUNT(*)
FROM PAYMENT
WHERE TO_CHAR(PAY_DT, 'YYYY-MM-DD') = TO_CHAR(SYSDATE,'YYYY-MM-DD');

-- 오늘날짜 '문의 글 수 조회' / 오늘날자 어답터 게시글 수 / 오늘날짜 펀딩 결제 건수
SELECT (SELECT COUNT(*)
      FROM BOARD
      WHERE BOARD_CD=5
      AND TO_CHAR(CREATE_DT, 'YYYY-MM-DD') = TO_CHAR(SYSDATE,'YYYY-MM-DD')) AS askCount,
      (SELECT COUNT(*)
      FROM BOARD
      WHERE BOARD_CD=2
      AND TO_CHAR(CREATE_DT, 'YYYY-MM-DD') = TO_CHAR(SYSDATE,'YYYY-MM-DD')) AS adopterCount,
      (SELECT COUNT(*)
      FROM PAYMENT
      WHERE TO_CHAR(PAY_DT, 'YYYY-MM-DD') = TO_CHAR(SYSDATE,'YYYY-MM-DD')) AS fundingCount
FROM DUAL;





-- 월별 '완료' 인 어답터 게시글 수
SELECT TO_CHAR(CREATE_DT,  'YYYY"년" MM"월"') AS MONTH, COUNT(*)
FROM BOARD
WHERE BOARD_CD=2
AND CATEGORY='완료'
GROUP BY TO_CHAR(CREATE_DT,  'YYYY"년" MM"월"') ;

-- 월별 펀딩 결제 목록 갯수 조회(오늘 날짜조회)
SELECT COUNT(*), TO_CHAR(PAY_DT,  'YYYY"년" MM"월"') AS MONTH
FROM PAYMENT
GROUP BY  TO_CHAR(PAY_DT,  'YYYY"년" MM"월"');










